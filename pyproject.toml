[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wsprforlinux"
version = "0.1.0"
description = "Offline voice input assistant for Linux using local Whisper model"
authors = [{name = "W4L Team"}]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "pyaudio>=0.2.11",
    "numpy>=1.21.0",
    "soundfile>=0.10.3",
    "openai-whisper>=20231117",
    "torch>=1.9.0",
    "torchaudio>=0.9.0",
    "tkinter",
    "json5>=0.9.0",
    "psutil>=5.8.0",
    "pydub>=0.25.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".pytest_cache",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pyaudio",
    "soundfile",
    "whisper",
    "torch",
    "torchaudio",
    "tkinter",
    "json5",
    "psutil",
    "pydub",
]
ignore_missing_imports = true 